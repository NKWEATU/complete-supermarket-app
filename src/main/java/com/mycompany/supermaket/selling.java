/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.supermaket;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class selling extends javax.swing.JFrame {
Connection con =  null;
PreparedStatement pst = null;
        Statement st = null;
        ResultSet rs = null;
    public selling() {
        initComponents();
             setLocationRelativeTo(null);
        }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        prod_Id = new javax.swing.JTextField();
        prodName = new javax.swing.JTextField();
        prodQuantity = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prodTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        billText = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        gTotal = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 51, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("BILL_ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 0));
        jLabel3.setText("NAME");

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("QUANTITY");

        prod_Id.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        prod_Id.setForeground(new java.awt.Color(255, 51, 0));

        prodName.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        prodName.setForeground(new java.awt.Color(255, 51, 0));

        prodQuantity.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        prodQuantity.setForeground(new java.awt.Color(255, 51, 0));

        addButton.setBackground(new java.awt.Color(255, 51, 0));
        addButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addButton.setText("ADD BILL");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 51, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("CLEAR");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        prodTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        prodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT_ID", "NAME", "CATEGORY", "QUANTITY", "PRICE (₦)"
            }
        ));
        prodTable.setSelectionBackground(new java.awt.Color(255, 51, 0));
        prodTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        prodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(prodTable);

        jLabel7.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 0));
        jLabel7.setText("PRODUCTS LIST");

        jButton1.setBackground(new java.awt.Color(255, 51, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("REFRESH");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        billText.setColumns(20);
        billText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        billText.setRows(5);
        jScrollPane2.setViewportView(billText);

        jButton2.setBackground(new java.awt.Color(255, 51, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("PRINT");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gTotal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        gTotal.setText("₦");

        jButton3.setBackground(new java.awt.Color(255, 51, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jButton3.setText("FILTER");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prod_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prodQuantity))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(gTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(prod_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jButton1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(prodQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(jButton4)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(gTotal))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("x");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BILLING POINT");

        jLabel11.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("lOGOUT");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(313, 313, 313)
                .addComponent(jLabel8)
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel11)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    double i = 0;
    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
   // Ensure a row is selected
    int selectedRow = prodTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a product first.");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) prodTable.getModel();

    // Read values from the table
    String productIdStr  = String.valueOf(model.getValueAt(selectedRow, COL_ID));
    String productName   = String.valueOf(model.getValueAt(selectedRow, COL_NAME));
    String priceStr      = String.valueOf(model.getValueAt(selectedRow, COL_PRICE));
    String stockStr      = String.valueOf(model.getValueAt(selectedRow, COL_QTY));

    // Parse price & stock
    try {
        uPrice = Double.parseDouble(priceStr.trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid price for the selected product.");
        return;
    }

    try {
        availableQuantity = Integer.parseInt(stockStr.trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid stock quantity for the selected product.");
        return;
    }

    // User-entered quantity
    String qtyText = prodQuantity.getText().trim();
    if (qtyText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter quantity.");
        return;
    }

    int requestedQuantity;
    try {
        requestedQuantity = Integer.parseInt(qtyText);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Quantity must be a number.");
        return;
    }

    if (requestedQuantity <= 0) {
        JOptionPane.showMessageDialog(this, "Quantity must be greater than 0.");
        return;
    }

    if (availableQuantity < requestedQuantity) {
        JOptionPane.showMessageDialog(this, "Not enough stock available.");
        return;
    }

    // Compute totals
    prodTotal = uPrice * requestedQuantity;
    grandTotal += prodTotal;

    // Print header once
    if (itemNo == 0) {
        billText.setText(
            "         ========= My Supermarket =========\n" +
            String.format("%-5s %-20s %-12s %-8s %-12s\n", "No", "Product", "Price(₦)", "Qty", "Total(₦)")
        );
    }

    // Append line
    itemNo++;
    billText.append(String.format("%-5d %-20s %-12.2f %-8d %-12.2f\n",
            itemNo, productName, uPrice, requestedQuantity, prodTotal));

    // Update stock in DB (prefer updating by product ID if we have it)
    try (Connection con = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/supermarketdb",
            "root",
            "Kenny4640"
        )) {

        String updateQuery;
        PreparedStatement pst;

        if (productIdStr != null && !productIdStr.isEmpty() && productIdStr.matches("\\d+")) {
            updateQuery = "UPDATE product SET quantity = ? WHERE prod_Id = ?";
            pst = con.prepareStatement(updateQuery);
            pst.setInt(1, availableQuantity - requestedQuantity);
            pst.setInt(2, Integer.parseInt(productIdStr));
        } else {
            // Fallback: update by name (less safe if names duplicate)
            updateQuery = "UPDATE product SET quantity = ? WHERE name = ?";
            pst = con.prepareStatement(updateQuery);
            pst.setInt(1, availableQuantity - requestedQuantity);
            pst.setString(2, productName);
        }

        pst.executeUpdate();
        pst.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error updating stock: " + e.getMessage());
    }

    // Refresh table rows (but do NOT clear billText)
    reloadProductsTable();

    // Update grand total label
    gTotal.setText("₦" + String.format("%.2f", grandTotal));

    // Clear input qty for next entry
    prodQuantity.setText("");


    }//GEN-LAST:event_addButtonMouseClicked
private void reloadProductsTable() {
    try (Connection con = ConnectionProvider.getCon();
         PreparedStatement pst = con.prepareStatement("SELECT * FROM product");
         ResultSet rs = pst.executeQuery()) {

        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"PRODUCT_ID", "NAME", "CATEGORY", "QUANTITY", "PRICE (₦)"}, 0
        ) {
            @Override public boolean isCellEditable(int r, int c) { return false; }
        };

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("prod_Id"),
                rs.getString("name"),
                rs.getString("category"),
                rs.getInt("quantity"),
                rs.getDouble("price")
            });
        }

        prodTable.setModel(model);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error refreshing table: " + e.getMessage());
    }
}

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        //prod_Id.setText("");
       // prodQuantity.setText("");
        prodName.setText("");
        //prodCategory.setSelectedItem("Select_Category");

    }//GEN-LAST:event_jButton4MouseClicked
        
   // --- Column index constants (match your JTable headers set in initComponents) ---
private static final int COL_ID = 0;
private static final int COL_NAME = 1;
private static final int COL_CATEGORY = 2;
private static final int COL_QTY = 3;
private static final int COL_PRICE = 4;

// --- Billing / selection state ---
private int itemNo = 0;                 // counts items added to the bill
private Double uPrice = 0.0;            // unit price of selected product
private Double prodTotal = 0.0;         // line total for last added product
private Double grandTotal = 0.0;        // sum of all lines
private int availableQuantity = 0;      // stock for selected product

    private void prodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodTableMouseClicked
        // TODO add your handling code here:
       DefaultTableModel model = (DefaultTableModel) prodTable.getModel();
    int myIndex = prodTable.getSelectedRow();

    if (myIndex == -1) return;

    // Read from fixed columns
    Object qtyObj   = model.getValueAt(myIndex, COL_QTY);
    Object nameObj  = model.getValueAt(myIndex, COL_NAME);
    Object priceObj = model.getValueAt(myIndex, COL_PRICE);
    Object idObj    = model.getValueAt(myIndex, COL_ID);

    // Safely parse values
    try {
        availableQuantity = Integer.parseInt(qtyObj.toString().trim());
    } catch (NumberFormatException ex) {
        availableQuantity = 0;
    }

    prodName.setText(nameObj != null ? nameObj.toString() : "");
    prod_Id.setText(idObj != null ? idObj.toString() : "");

    try {
        uPrice = Double.parseDouble(priceObj.toString().trim());
    } catch (NumberFormatException ex) {
        uPrice = 0.0;
    }

        //prodCategory.setSelectedItem(model.getValueAt(myIndex, 4).toString());
    }//GEN-LAST:event_prodTableMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
           reloadProductsTable();
    }//GEN-LAST:event_formComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        try {
        if (billText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nothing to print yet.");
            return;
        }
        billText.print();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Print failed: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        new LOGIN().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
    // TODO add your handling code here:
  reloadProductsTable();

    // Optional: If you want refresh to also clear inputs (but keep current bill)
    prod_Id.setText("");
    prodName.setText("");
    prodQuantity.setText("");
    billText.setText("");
    gTotal.setText("");
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
    String searchText = jTextField1.getText().trim().toLowerCase();

    try (Connection con = ConnectionProvider.getCon();
         PreparedStatement pst = con.prepareStatement(
             "SELECT * FROM product WHERE LOWER(name) LIKE ?")) {

        pst.setString(1, "%" + searchText + "%");
        ResultSet rs = pst.executeQuery();

        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"PRODUCT_ID", "NAME", "CATEGORY", "QUANTITY", "PRICE (₦)"}, 0
        ) {
            @Override public boolean isCellEditable(int r, int c) { return false; }
        };

        boolean hasResults = false;
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("prod_Id"),
                rs.getString("name"),
                rs.getString("category"),
                rs.getInt("quantity"),   // quantity in COL_QTY
                rs.getDouble("price")    // price in COL_PRICE
            });
            hasResults = true;
        }

        if (!hasResults) {
            model.addRow(new Object[]{"-", "No match found", "-", "-", "-"});
        }

        prodTable.setModel(model);
        rs.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error filtering: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new selling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextArea billText;
    private javax.swing.JLabel gTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField prodName;
    private javax.swing.JTextField prodQuantity;
    private javax.swing.JTable prodTable;
    private javax.swing.JTextField prod_Id;
    // End of variables declaration//GEN-END:variables
}
